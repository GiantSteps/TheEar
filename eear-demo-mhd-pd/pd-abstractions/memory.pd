#N canvas 626 210 607 300 10;
#X obj 127 122 list split 1;
#X obj 127 142 % 12;
#N canvas 688 478 450 300 list2histogram 0;
#X obj 36 22 inlet;
#X obj 36 95 t b f f;
#X obj 101 93 list;
#X obj 36 67 list split 1;
#X obj 36 45 t a b;
#X obj 55 158 + 1;
#X msg 158 62 \; memory-histogram const 0;
#X obj 55 131 tabread memory-histogram;
#X obj 55 190 tabwrite memory-histogram;
#X connect 0 0 4 0;
#X connect 1 0 2 0;
#X connect 1 1 7 0;
#X connect 1 2 8 1;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X connect 3 1 2 1;
#X connect 4 0 3 0;
#X connect 4 1 6 0;
#X connect 5 0 8 0;
#X connect 7 0 5 0;
#X restore 127 182 pd list2histogram;
#X obj 100 100 t b f;
#X obj 54 61 inlet;
#X obj 127 161 list-push \$1;
#X text 278 132 argument is the size of the memory;
#X obj 100 251 outlet;
#X text 253 160 it always writes on a table called memory-histogram
;
#X obj 100 224 tabdump memory-histogram;
#X text 64 8 input can be a note or a bang: a note goes to the memory
\, a bang outputs the histogram;
#X obj 54 80 route bang float;
#X text 251 219 everytime we receive a new note or a bang we dump the
histogram to the analyzer;
#X obj 276 53 inlet;
#X text 314 51 clear memory;
#X msg 276 77 \; memory-histogram const 0;
#X msg 202 142 bang;
#X connect 0 0 1 0;
#X connect 1 0 5 0;
#X connect 3 0 9 0;
#X connect 3 1 0 0;
#X connect 4 0 11 0;
#X connect 5 0 2 0;
#X connect 9 0 7 0;
#X connect 11 0 9 0;
#X connect 11 1 3 0;
#X connect 13 0 15 0;
#X connect 13 0 16 0;
#X connect 16 0 5 1;
