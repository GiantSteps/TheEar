/*
  ==============================================================================

    This file was auto-generated by the Jucer!

    It contains the basic startup code for a Juce application.

  ==============================================================================
*/

#include "PluginEditor.h"

//==============================================================================
TheEarPluginAudioProcessorEditor::TheEarPluginAudioProcessorEditor (TheEarPluginAudioProcessor& owner)
    : AudioProcessorEditor (owner),
    mainTab(owner.keyboardState, processor)


{
    Colour backgroundColour(154, 32, 32);
    Colour purpleColour(170, 165, 190);
    Colour mainColour(135, 205, 222);
    Colour greyOne(55, 69, 72);
    Colour greyTwo(28, 31, 36);

    
//    lookAndFeel.setColour(MainTab::ColourIds::backgroundColourId, backgroundColour);
    lookAndFeel.setColour(Label::ColourIds::textColourId, mainColour);
    lookAndFeel.setColour(TextButton::ColourIds::buttonColourId, mainColour);
    lookAndFeel.setColour(TextButton::ColourIds::textColourOffId, greyOne);
    lookAndFeel.setColour(TextButton::ColourIds::textColourOnId, greyTwo);
    lookAndFeel.setColour(ToggleButton::ColourIds::textColourId, mainColour);

    setLookAndFeel(&lookAndFeel);
    
    addAndMakeVisible(mainTab);
    setSize(800, 700);
}

TheEarPluginAudioProcessorEditor::~TheEarPluginAudioProcessorEditor()
{
}


//==============================================================================
void TheEarPluginAudioProcessorEditor::paint (Graphics& g)
{
//    g.setGradientFill (ColourGradient (Colours::white, 0, 0,
//                                       Colours::grey, 0, (float) getHeight(), false));
    
    Colour backgroundColour(28, 31, 36);
    g.fillAll(backgroundColour);
}

void TheEarPluginAudioProcessorEditor::resized()
{


    mainTab.setBounds(getLocalBounds());
    
}


